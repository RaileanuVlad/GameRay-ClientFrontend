{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Bundle } from '../../shared/bundle.model';\nimport { ApiService } from '../../shared/api.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../shared/api.service\";\nimport * as i3 from \"ngx-bootstrap/modal\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"angular-bootstrap-md\";\nconst _c0 = [\"editBundleModal\"];\n\nfunction EditBundleModalComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function EditBundleModalComponent_div_2_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.editBundle();\n    });\n    i0.ɵɵelementStart(2, \"p\", 5);\n    i0.ɵɵtext(3, \"Edit Bundle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 6)(5, \"input\", 7)(6, \"input\", 8);\n    i0.ɵɵelementStart(7, \"button\", 9);\n    i0.ɵɵtext(8, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.editBundleForm);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.editBundleForm.invalid || ctx_r1.editBundleForm.pristine);\n  }\n}\n\nexport let EditBundleModalComponent = /*#__PURE__*/(() => {\n  class EditBundleModalComponent {\n    constructor(fb, api) {\n      this.fb = fb;\n      this.api = api;\n      this.change = new EventEmitter();\n      this.currentBundle = new Bundle();\n    }\n\n    show(id) {\n      this.modal.show();\n      this.api.getBundle(id).subscribe(data => {\n        this.currentBundle = data;\n        this.initializeFrom(this.currentBundle);\n      }, error => {\n        console.log('err', error);\n      });\n    }\n\n    initializeFrom(currentBundle) {\n      this.editBundleForm = this.fb.group({\n        name: [currentBundle.name, Validators.required],\n        price: [currentBundle.price, Validators.required],\n        gameId: ['', Validators.required],\n        img: [currentBundle.img]\n      });\n    }\n\n    editBundle() {\n      const editedBundle = new Bundle({\n        id: this.currentBundle.id,\n        name: this.editBundleForm.value.name,\n        price: this.editBundleForm.value.style,\n        gameId: this.transformInNumberArray(this.editBundleForm.value.gameId),\n        img: this.editBundleForm.value.img\n      });\n      this.api.editBundle(editedBundle).subscribe(() => {\n        this.change.emit('bundle');\n        this.modal.hide();\n      }, error => {\n        console.log('err', error);\n      });\n    }\n\n    transformInNumberArray(string) {\n      return JSON.parse('[' + string + ']');\n    }\n\n  }\n\n  EditBundleModalComponent.ɵfac = function EditBundleModalComponent_Factory(t) {\n    return new (t || EditBundleModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n\n  EditBundleModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditBundleModalComponent,\n    selectors: [[\"app-edit-bundle-modal\"]],\n    viewQuery: function EditBundleModalComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modal = _t.first);\n      }\n    },\n    outputs: {\n      change: \"change\"\n    },\n    decls: 3,\n    vars: 1,\n    consts: [[\"bsModal\", \"\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"editBundleModal\", \"aria-hidden\", \"true\", 1, \"row\", \"modal\", \"fade\", 3, \"onHide\"], [\"editBundleModal\", \"bs-modal\"], [\"class\", \"col-md-6 col-sm-6 col-lg-4 mx-auto my-4\", 4, \"ngIf\"], [1, \"col-md-6\", \"col-sm-6\", \"col-lg-4\", \"mx-auto\", \"my-4\"], [1, \"text-center\", \"border\", \"border-light\", \"p-5\", 3, \"formGroup\", \"ngSubmit\"], [1, \"h4\", \"mb-4\"], [\"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Enter name\", \"autocomplete\", \"off\", 1, \"form-control\", \"mb-4\"], [\"type\", \"text\", \"formControlName\", \"price\", \"placeholder\", \"Enter style\", \"autocomplete\", \"off\", 1, \"form-control\", \"mb-4\"], [\"type\", \"text\", \"id\", \"game\", \"placeholder\", \"GameId1, GameId2\", \"formControlName\", \"gameId\", \"autocomplete\", \"off\", 1, \"form-control\", \"mb-4\"], [\"mdbBtn\", \"\", \"color\", \"danger\", \"block\", \"true\", \"type\", \"submit\", 1, \"my-4\", 3, \"disabled\"]],\n    template: function EditBundleModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"onHide\", function EditBundleModalComponent_Template_div_onHide_0_listener() {\n          return ctx.editBundleForm.reset();\n        });\n        i0.ɵɵtemplate(2, EditBundleModalComponent_div_2_Template, 9, 2, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.editBundleForm);\n      }\n    },\n    directives: [i3.ModalDirective, i4.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i5.MdbBtnDirective],\n    styles: [\"form[_ngcontent-%COMP%]{background-color:#fff;border-radius:10px}\"]\n  });\n  return EditBundleModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
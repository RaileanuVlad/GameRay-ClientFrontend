{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { ApiService } from '../../shared/api.service';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../shared/api.service\";\nimport * as i3 from \"ngx-bootstrap/modal\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"angular-bootstrap-md\";\nconst _c0 = [\"registerModal\"];\n\nfunction RegisterModalComponent_span_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \"Passwords do not match\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterModalComponent_span_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1, \"This email is already registered.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let RegisterModalComponent = /*#__PURE__*/(() => {\n  class RegisterModalComponent {\n    constructor(fb, api) {\n      this.fb = fb;\n      this.api = api;\n      this.registerInvalid = false;\n    }\n\n    show() {\n      this.modal.show();\n      this.addUserForm = this.fb.group({\n        email: [null, Validators.required],\n        password: [null, Validators.required],\n        rpassword: [null, Validators.required],\n        state: [0, Validators.required]\n      });\n    }\n\n    addUser() {\n      this.registerInvalid = false;\n      this.addUserForm.value.state = Number(this.addUserForm.value.state);\n      this.api.addUser(this.addUserForm.value).subscribe(() => {\n        this.modal.hide();\n      }, error => {\n        this.registerInvalid = true;\n      });\n    }\n\n  }\n\n  RegisterModalComponent.ɵfac = function RegisterModalComponent_Factory(t) {\n    return new (t || RegisterModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n\n  RegisterModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterModalComponent,\n    selectors: [[\"app-register-modal\"]],\n    viewQuery: function RegisterModalComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modal = _t.first);\n      }\n    },\n    decls: 31,\n    vars: 4,\n    consts: [[\"bsModal\", \"\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"registerModal\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\", 3, \"onHide\"], [\"registerModal\", \"bs-modal\"], [\"id\", \"bigDiv\", \"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\", 2, \"background-color\", \"black\"], [1, \"modal-header\"], [\"id\", \"myModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"close\", 3, \"click\"], [1, \"fa-solid\", \"fa-x\"], [1, \"modal-body\"], [1, \"register-form\"], [\"id\", \"thisone\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"autocomplete\", \"off\", \"placeholder\", \"Enter Email\", 1, \"form-control\", \"mb-4\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"autocomplete\", \"off\", \"placeholder\", \"Enter Password\", 1, \"form-control\", \"mb-4\"], [\"for\", \"rpassword\"], [\"type\", \"password\", \"id\", \"rpassword\", \"formControlName\", \"rpassword\", \"autocomplete\", \"off\", \"placeholder\", \"Re-type Password\", 1, \"form-control\", \"mb-4\", 2, \"margin-bottom\", \"0px !important\"], [2, \"margin-bottom\", \"15px\", \"margin-top\", \"none\", \"font-size\", \"12px\", \"text-align\", \"center\"], [\"style\", \"color:red\", 4, \"ngIf\"], [\"form\", \"thisone\", \"mdbBtn\", \"\", \"block\", \"true\", \"type\", \"submit\", 1, \"my-4\", 3, \"disabled\"], [1, \"mb-4\", 2, \"text-align\", \"center\"], [\"style\", \"color:red;font-size:16px\", 4, \"ngIf\"], [2, \"color\", \"red\"], [2, \"color\", \"red\", \"font-size\", \"16px\"]],\n    template: function RegisterModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"onHide\", function RegisterModalComponent_Template_div_onHide_0_listener() {\n          return ctx.addUserForm.reset();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n        i0.ɵɵtext(6, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function RegisterModalComponent_Template_button_click_7_listener() {\n          return ctx.modal.hide();\n        });\n        i0.ɵɵelement(8, \"i\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"div\", 9)(11, \"form\", 10);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterModalComponent_Template_form_ngSubmit_11_listener() {\n          return ctx.addUser();\n        });\n        i0.ɵɵelementStart(12, \"div\", 11)(13, \"label\", 12);\n        i0.ɵɵtext(14, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 11)(17, \"label\", 14);\n        i0.ɵɵtext(18, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 11)(21, \"label\", 16);\n        i0.ɵɵtext(22, \"Re-type password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 17);\n        i0.ɵɵelementStart(24, \"div\", 18);\n        i0.ɵɵtemplate(25, RegisterModalComponent_span_25_Template, 2, 0, \"span\", 19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 11)(27, \"button\", 20);\n        i0.ɵɵtext(28, \"Go!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 21);\n        i0.ɵɵtemplate(30, RegisterModalComponent_span_30_Template, 2, 0, \"span\", 22);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.addUserForm);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngIf\", ctx.addUserForm.controls.rpassword.value !== ctx.addUserForm.controls.password.value);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.addUserForm.valid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerInvalid);\n      }\n    },\n    directives: [i3.ModalDirective, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.NgIf, i5.MdbBtnDirective],\n    styles: [\"*[_ngcontent-%COMP%]{color:#50b9ff}.register-form[_ngcontent-%COMP%]{width:340px;margin:50px auto;font-size:18px}.register-form[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin-bottom:15px}.form-control[_ngcontent-%COMP%], .btn[_ngcontent-%COMP%]{min-height:38px;border-radius:2px}.btn[_ngcontent-%COMP%]{font-size:15px;font-weight:700;background-color:#50b9ff;color:#000;border:none}#bigDiv[_ngcontent-%COMP%]{border:3px solid rgb(80,185,255);border-radius:10px;box-shadow:0 0 50px #50b9ff}.modal-header[_ngcontent-%COMP%]{border-bottom-color:#50b9ff}\"]\n  });\n  return RegisterModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}